name: Docker Build and Release
on:
  push:
    tags: [ 'v*.*.*' ]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: adarshchbs/remote-ml-ide
jobs:
  build-and-release:
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      packages: write
      id-token: write
    steps:
      - name: Maximize build disk space
        uses: easimon/maximize-build-space@v10
  
      - name: Free disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache
          df -h

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0
        with:
          buildkitd-flags: --debug

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ format('{0}/{1}', env.REGISTRY, env.IMAGE_NAME) }}

      - name: Build Docker image
        id: build
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          push: false
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1
          outputs: type=docker

      - name: Save Docker image
        run: |
          # Get the first tag from meta.outputs.tags
          SOURCE_TAG=$(echo "${{ steps.meta.outputs.tags }}" | head -n 1)
          FULL_IMAGE_PATH="${{ format('{0}/{1}', env.REGISTRY, env.IMAGE_NAME) }}"
          
          # Tag the image with the correct name
          docker tag "$SOURCE_TAG" "$FULL_IMAGE_PATH"
          docker builder prune -af
          # Save it to a tar file
          docker save "$FULL_IMAGE_PATH" | gzip -8 > docker-image.tar.gz
          docker rmi "$FULL_IMAGE_PATH"
          docker system prune -af
          # Compress the tar file
      - name: Generate changelog
        id: changelog
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -z "$PREV_TAG" ]; then
            # If no previous tag exists, get all commits
            CHANGELOG=$(git log --pretty=format:"* %s" || echo "Initial release")
          else
            # Get commits since last tag
            CHANGELOG=$(git log --pretty=format:"* %s" ${PREV_TAG}..HEAD)
          fi
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          body: |
            ## Changes
            ${{ steps.changelog.outputs.CHANGELOG }}
            ## Installation
            ```bash
            # After downloading docker-image.tar.gz:
            docker load -i docker-image.tar.gz
            ```
          draft: false
          prerelease: false
          generate_release_notes: true
          files: docker-image.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
